<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杂七杂八 on Zhihao&#39;s Blog</title>
    <link>https://zhihao2020.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/</link>
    <description>Recent content in 杂七杂八 on Zhihao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 04 May 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://zhihao2020.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python控制键盘和鼠标</title>
      <link>https://zhihao2020.github.io/2020/05/python%E6%8E%A7%E5%88%B6%E9%94%AE%E7%9B%98%E5%92%8C%E9%BC%A0%E6%A0%87/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E6%8E%A7%E5%88%B6%E9%94%AE%E7%9B%98%E5%92%8C%E9%BC%A0%E6%A0%87/</guid>
      <description>使用pyautogui模块。 在Windows上，不需要安装其他模块。 在OS X上，运行sudo pip3 install pyobjc-framework-Quart</description>
    </item>
    
    <item>
      <title>Python组织文件</title>
      <link>https://zhihao2020.github.io/2020/05/python%E7%BB%84%E7%BB%87%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E7%BB%84%E7%BB%87%E6%96%87%E4%BB%B6/</guid>
      <description>shutil函数可以让你能够复制、移动、改名和删除文件。 复制文件和文件夹 shutil.copy(source,destination),这个</description>
    </item>
    
    <item>
      <title>ASCII表-Nonprintable Characters</title>
      <link>https://zhihao2020.github.io/2020/05/ascii%E8%A1%A8-nonprintable-characters/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/ascii%E8%A1%A8-nonprintable-characters/</guid>
      <description>ASCII Table &amp;ndash; Nonprintable Characters Control Character Python &amp;amp; Java Hexadecimal Decimal Description ^@ \0 00 0 Null character ^A \1 01 1 Start of heading ^B \2 02 2 Start of text ^C \3 03 3 End of text ^D \4 04 4 End of transmission ^E \5 05 5 Enquiry ^F \6 06 6 Acknowledge ^G \a 07 7 Audible bell ^H \b 08 8 Backspace ^I \t</description>
    </item>
    
    <item>
      <title>Python中win32print</title>
      <link>https://zhihao2020.github.io/2020/05/python%E4%B8%ADwin32print/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E4%B8%ADwin32print/</guid>
      <description>OpenPrinter 打开打印机 win32print.OpenPrinter(string,Defaults) string就是打印机的名字，当为空的时候打开本地打印机 StartDocPrinter StartDocPrinter(hprinter, level , tuple ) level=1 tuple:对应于level参数的元组 ​ [0]:字符串：</description>
    </item>
    
    <item>
      <title>Python中的enumerate()</title>
      <link>https://zhihao2020.github.io/2020/05/python%E4%B8%AD%E7%9A%84enumerate/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E4%B8%AD%E7%9A%84enumerate/</guid>
      <description>enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中 写法 enumerate(sequence,[start=0]) 参数 sequen</description>
    </item>
    
    <item>
      <title>Python中的textwrap</title>
      <link>https://zhihao2020.github.io/2020/05/python%E4%B8%AD%E7%9A%84textwrap/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E4%B8%AD%E7%9A%84textwrap/</guid>
      <description>用于对文本字符串进行自动换行或填充。 textwrap.wrap(text,width=70,**kwargs) ​ 对text中的单独段落自动换行以使每行长度最多为width个字符。返回输出行组成的列表，行尾不带换行</description>
    </item>
    
    <item>
      <title>Python中的异常处理</title>
      <link>https://zhihao2020.github.io/2020/05/python%E4%B8%AD%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E4%B8%AD%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>捕捉异常 使用try/except语句实现。 except() except语句可以使用不止一次： try: xxx except ZeroDivisionError: print() except TypeError: print() 或者像这样 try: XXX except (ZeroDivisionError,TypeError): print() 如果你想记录原因的话，可以</description>
    </item>
    
    <item>
      <title>Python的webbrowser</title>
      <link>https://zhihao2020.github.io/2020/05/python%E7%9A%84webbrowser/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/python%E7%9A%84webbrowser/</guid>
      <description>允许向用户显示基于Web的文档。在大多数情况下，只需要调用open()函数就可以。 脚本 webbrowser 可以用作模块的命令行界面。它接受一个 URL 作为参数。还接</description>
    </item>
    
    <item>
      <title>SQLite常用操作</title>
      <link>https://zhihao2020.github.io/2020/05/sqlite%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/05/sqlite%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>新建一个数据库文件 使用cd命令进入到数据库文件的目录下，用sqlite3命令创建数据库文件。 sqlite3 DatabaseName.db 查看已建立的数据库文件 使用database命</description>
    </item>
    
    <item>
      <title>html转为图片</title>
      <link>https://zhihao2020.github.io/2020/04/html%E8%BD%AC%E4%B8%BA%E5%9B%BE%E7%89%87/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/html%E8%BD%AC%E4%B8%BA%E5%9B%BE%E7%89%87/</guid>
      <description>安装python-pdfkit： pip install pdfkit 安装wkhtmlopdf https://wkhtmltopdf.org/downloads.html下</description>
    </item>
    
    <item>
      <title>Python中的logging模块</title>
      <link>https://zhihao2020.github.io/2020/04/python%E4%B8%AD%E7%9A%84logging%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/python%E4%B8%AD%E7%9A%84logging%E6%A8%A1%E5%9D%97/</guid>
      <description>使用日志模块要启用logging模块， 开始 在程序运行时将日志信息显示在屏幕上，请将下面的代码复制到程序顶部（但在Python的#!行之下） import</description>
    </item>
    
    <item>
      <title>ShellExecute简单控制打印机</title>
      <link>https://zhihao2020.github.io/2020/04/shellexecute%E7%AE%80%E5%8D%95%E6%8E%A7%E5%88%B6%E6%89%93%E5%8D%B0%E6%9C%BA/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/shellexecute%E7%AE%80%E5%8D%95%E6%8E%A7%E5%88%B6%E6%89%93%E5%8D%B0%E6%9C%BA/</guid>
      <description>使用ShellExecute方法，可以打印Microsoft Office文档，PDF文件，文本文件以及几乎搜友主要应用程序。 import tempfile import win32api import win32print filename =</description>
    </item>
    
    <item>
      <title>Window下安装SQLite</title>
      <link>https://zhihao2020.github.io/2020/04/%E5%AE%89%E8%A3%85sqlite/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/%E5%AE%89%E8%A3%85sqlite/</guid>
      <description>SQLite官方安装地址：http://www.sqlite.org/download.html 我下载了压缩包sqlite-tools-wi</description>
    </item>
    
    <item>
      <title>用Matplotlib画折线图</title>
      <link>https://zhihao2020.github.io/2020/04/%E7%94%A8matplotlib%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/%E7%94%A8matplotlib%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE/</guid>
      <description>plt.plot()函数参数详解 plt.plot(x,y,linestyle, linewidth,color,marker, markersize,markeredgecolor, markerfactcolor,label,alpha) x：指定折现图的x轴数据 y：指定折线图的y轴数据 linestyle：指定折线类型，可以是实线、虚线、</description>
    </item>
    
    <item>
      <title>pip使用指南</title>
      <link>https://zhihao2020.github.io/2020/04/pip%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/pip%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>安装时，换个源 pip install -i http://pypi.tuna.tsinghua.edu.cn/simple XXX https://pypi.douban.com/simple 豆瓣的源 显示版本和路径 pip --version 升级pip pip install -U pip 安装包 pip install SomePackage #这是下载最新版本 pip install SomePackage==1.0.4 #指定版本 pip install SomePackafe&amp;gt;=1.0.4 #最小版本 升级包 pip</description>
    </item>
    
    <item>
      <title>Windows下CMD常用命令</title>
      <link>https://zhihao2020.github.io/2020/04/windows%E4%B8%8Bcmd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/windows%E4%B8%8Bcmd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>1、进入某个盘 D: #进入D盘 2、查看目录文件 dir 3、创建目录和删除目录 md 目录名 //创建目录 rd 目录名 //删除目录 4、查看本机ip ipconfig 5、清楚屏幕 cls 6</description>
    </item>
    
    <item>
      <title>【Tensorflow安装问题】总是无法安装tensorflow：Could not find a version that satisfies the requirement tensorflow</title>
      <link>https://zhihao2020.github.io/2020/04/tensorflow%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%80%BB%E6%98%AF%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85tensorflowcould-not-find-a-version-that-satisfies-the-requirement-tensorflow/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/tensorflow%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%80%BB%E6%98%AF%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85tensorflowcould-not-find-a-version-that-satisfies-the-requirement-tensorflow/</guid>
      <description>我在使用pip 安装Tendorflow时，出现了错误。 我查阅了好多博客，发现他们大多都是一个版本的&amp;hellip;.. Tensorflow能</description>
    </item>
    
    <item>
      <title>操作CSV表格</title>
      <link>https://zhihao2020.github.io/2020/04/%E4%BD%BF%E7%94%A8csv%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/%E4%BD%BF%E7%94%A8csv%E6%A8%A1%E5%9D%97/</guid>
      <description>CSV表示&amp;quot;Comma-Sparated Values（逗号分隔的值）&amp;quot;,CSV文件是简化的电子表格，保存为纯文本文件。 不</description>
    </item>
    
    <item>
      <title>Git基本操作(2)</title>
      <link>https://zhihao2020.github.io/2020/04/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C2/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C2/</guid>
      <description>打标签 打标签就是用于给历史中的某一个提交打上标签。 列出标签 在Git中列出已有的标签是非常直观的。只需要输入git tag。 当然，你可以使用特定</description>
    </item>
    
    <item>
      <title>Git错误non-fast-forward后的解决方案</title>
      <link>https://zhihao2020.github.io/2020/04/git%E9%94%99%E8%AF%AFnon-fast-forward%E5%90%8E%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhihao2020.github.io/2020/04/git%E9%94%99%E8%AF%AFnon-fast-forward%E5%90%8E%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>在Push文件到github时候，出现了这个问题。这个问题是本地和Github中Repository中的文件出现冲突所造成的。在提交之前你需</description>
    </item>
    
  </channel>
</rss>
