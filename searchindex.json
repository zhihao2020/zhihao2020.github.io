{"categories":[{"title":"学习能力","uri":"https://zhihao2020.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%83%BD%E5%8A%9B/"},{"title":"建筑方面","uri":"https://zhihao2020.github.io/categories/%E5%BB%BA%E7%AD%91%E6%96%B9%E9%9D%A2/"},{"title":"效率工具","uri":"https://zhihao2020.github.io/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"},{"title":"数据分析","uri":"https://zhihao2020.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"title":"生活","uri":"https://zhihao2020.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"posts":[{"content":"行内与独行  行内公式：将公式插入到本行内，符号：$公式内容$，如：$xyz$ 独行公式：将公式插入到新的一行内，并且居中，符号：$$公式内容$$，如：$$xyz$$  上标、下标与组合  上标符号，符号：^，如：$x^4$ 下标符号，符号：_，如：$x_1$ 组合符号，符号：{}，如：${16}{8}O{2+}{2}$  汉字、字体与格式  汉字形式，符号：\\mbox{}，如：$V_{\\mbox{初始}}$ 字体控制，符号：\\displaystyle，如：$\\displaystyle \\frac{x+y}{y+z}$ 下划线符号，符号：\\underline，如：$\\underline{x+y}$ 标签，符号\\tag{数字}，如：$\\tag{11}$ 上大括号，符号：\\overbrace{算式}，如：$\\overbrace{a+b+c+d}^{2.0}$ 下大括号，符号：\\underbrace{算式}，如：$a+\\underbrace{b+c}_{1.0}+d$ 上位符号，符号：\\stacrel{上位符号}{基位符号}，如：$\\vec{x}\\stackrel{\\mathrm{def}}{=}{x_1,\\dots,x_n}$  占位符  两个quad空格，符号：\\qquad，如：$x \\qquad y$ quad空格，符号：\\quad，如：$x \\quad y$ 大空格，符号\\，如：$x \\ y$ 中空格，符号\\:，如：$x : y$ 小空格，符号\\,，如：$x , y$ 没有空格，符号``，如：$xy$ 紧贴，符号\\!，如：$x ! y$  定界符与组合  括号，符号：（）\\big(\\big) \\Big(\\Big) \\bigg(\\bigg) \\Bigg(\\Bigg)，如：$（）\\big(\\big) \\Big(\\Big) \\bigg(\\bigg) \\Bigg(\\Bigg)$ 中括号，符号：[]，如：$[x+y]$ 大括号，符号：\\{ \\}，如：${x+y}$ 自适应括号，符号：\\left \\right，如：$\\left(x\\right)$，$\\left(x{yz}\\right)$ 组合公式，符号：{上位公式 \\choose 下位公式}，如：${n+1 \\choose k}={n \\choose k}+{n \\choose k-1}$ 组合公式，符号：{上位公式 \\atop 下位公式}，如：$\\sum_{k_0,k_1,\\ldots\u0026gt;0 \\atop k_0+k_1+\\cdots=n}A_{k_0}A_{k_1}\\cdots$  四则运算  加法运算，符号：+，如：$x+y=z$ 减法运算，符号：-，如：$x-y=z$ 加减运算，符号：\\pm，如：$x \\pm y=z$ 减甲运算，符号：\\mp，如：$x \\mp y=z$ 乘法运算，符号：\\times，如：$x \\times y=z$ 点乘运算，符号：\\cdot，如：$x \\cdot y=z$ 星乘运算，符号：\\ast，如：$x \\ast y=z$ 除法运算，符号：\\div，如：$x \\div y=z$ 斜法运算，符号：/，如：$x/y=z$ 分式表示，符号：\\frac{分子}{分母}，如：$\\frac{x+y}{y+z}$ 分式表示，符号：{分子} \\voer {分母}，如：${x+y} \\over {y+z}$ 绝对值表示，符号：||，如：$|x+y|$  高级运算  平均数运算，符号：\\overline{算式}，如：$\\overline{xyz}$ 开二次方运算，符号：\\sqrt，如：$\\sqrt x$ 开方运算，符号：\\sqrt[开方数]{被开方数}，如：$\\sqrt[3]{x+y}$ 对数运算，符号：\\log，如：$\\log(x)$ 极限运算，符号：\\lim，如：$\\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 极限运算，符号：\\displaystyle \\lim，如：$\\displaystyle \\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 求和运算，符号：\\sum，如：$\\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 求和运算，符号：\\displaystyle \\sum，如：$\\displaystyle \\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$ 积分运算，符号：\\int，如：$\\int^{\\infty}_{0}{xdx}$ 积分运算，符号：\\displaystyle \\int，如：$\\displaystyle \\int^{\\infty}_{0}{xdx}$ 微分运算，符号：\\partial，如：$\\frac{\\partial x}{\\partial y}$ 矩阵表示，符号：\\begin{matrix} \\end{matrix}，如：$\\left[ \\begin{matrix} 1 \u0026amp;2 \u0026amp;\\cdots \u0026amp;4\\5 \u0026amp;6 \u0026amp;\\cdots \u0026amp;8\\vdots \u0026amp;\\vdots \u0026amp;\\ddots \u0026amp;\\vdots\\13 \u0026amp;14 \u0026amp;\\cdots \u0026amp;16\\end{matrix} \\right]$  逻辑运算  等于运算，符号：=，如：$x+y=z$ 大于运算，符号：\u0026gt;，如：$x+y\u0026gt;z$ 小于运算，符号：\u0026lt;，如：$x+y\u0026lt;z$ 大于等于运算，符号：\\geq，如：$x+y \\geq z$ 小于等于运算，符号：\\leq，如：$x+y \\leq z$ 不等于运算，符号：\\neq，如：$x+y \\neq z$ 不大于等于运算，符号：\\ngeq，如：$x+y \\ngeq z$ 不大于等于运算，符号：\\not\\geq，如：$x+y \\not\\geq z$ 不小于等于运算，符号：\\nleq，如：$x+y \\nleq z$ 不小于等于运算，符号：\\not\\leq，如：$x+y \\not\\leq z$ 约等于运算，符号：\\approx，如：$x+y \\approx z$ 恒定等于运算，符号：\\equiv，如：$x+y \\equiv z$  集合运算  属于运算，符号：\\in，如：$x \\in y$ 不属于运算，符号：\\notin，如：$x \\notin y$ 不属于运算，符号：\\not\\in，如：$x \\not\\in y$ 子集运算，符号：\\subset，如：$x \\subset y$ 子集运算，符号：\\supset，如：$x \\supset y$ 真子集运算，符号：\\subseteq，如：$x \\subseteq y$ 非真子集运算，符号：\\subsetneq，如：$x \\subsetneq y$ 真子集运算，符号：\\supseteq，如：$x \\supseteq y$ 非真子集运算，符号：\\supsetneq，如：$x \\supsetneq y$ 非子集运算，符号：\\not\\subset，如：$x \\not\\subset y$ 非子集运算，符号：\\not\\supset，如：$x \\not\\supset y$ 并集运算，符号：\\cup，如：$x \\cup y$ 交集运算，符号：\\cap，如：$x \\cap y$ 差集运算，符号：\\setminus，如：$x \\setminus y$ 同或运算，符号：\\bigodot，如：$x \\bigodot y$ 同与运算，符号：\\bigotimes，如：$x \\bigotimes y$ 实数集合，符号：\\mathbb{R}，如：\\mathbb{R} 自然数集合，符号：\\mathbb{Z}，如：\\mathbb{Z} 空集，符号：\\emptyset，如：$\\emptyset$  数学符号  无穷，符号：\\infty，如：$\\infty$ 虚数，符号：\\imath，如：$\\imath$ 虚数，符号：\\jmath，如：$\\jmath$ 数学符号，符号\\hat{a}，如：$\\hat{a}$ 数学符号，符号\\check{a}，如：$\\check{a}$ 数学符号，符号\\breve{a}，如：$\\breve{a}$ 数学符号，符号\\tilde{a}，如：$\\tilde{a}$ 数学符号，符号\\bar{a}，如：$\\bar{a}$ 矢量符号，符号\\vec{a}，如：$\\vec{a}$ 数学符号，符号\\acute{a}，如：$\\acute{a}$ 数学符号，符号\\grave{a}，如：$\\grave{a}$ 数学符号，符号\\mathring{a}，如：$\\mathring{a}$ 一阶导数符号，符号\\dot{a}，如：$\\dot{a}$ 二阶导数符号，符号\\ddot{a}，如：$\\ddot{a}$ 上箭头，符号：\\uparrow，如：$\\uparrow$ 上箭头，符号：\\Uparrow，如：$\\Uparrow$ 下箭头，符号：\\downarrow，如：$\\downarrow$ 下箭头，符号：\\Downarrow，如：$\\Downarrow$ 左箭头，符号：\\leftarrow，如：$\\leftarrow$ 左箭头，符号：\\Leftarrow，如：$\\Leftarrow$ 右箭头，符号：\\rightarrow，如：$\\rightarrow$ 右箭头，符号：\\Rightarrow，如：$\\Rightarrow$ 底端对齐的省略号，符号：\\ldots，如：$1,2,\\ldots,n$ 中线对齐的省略号，符号：\\cdots，如：$x_1^2 + x_2^2 + \\cdots + x_n^2$ 竖直对齐的省略号，符号：\\vdots，如：$\\vdots$ 斜对齐的省略号，符号：\\ddots，如：$\\ddots$  希腊字母    字母 实现 字母 实现     A A α \\alhpa   B B β \\beta   Γ \\Gamma γ \\gamma   Δ \\Delta δ \\delta   E E ϵ \\epsilon   Z Z ζ \\zeta   H H η \\eta   Θ \\Theta θ \\theta   I I ι \\iota   K K κ \\kappa   Λ \\Lambda λ \\lambda   M M μ \\mu   N N ν \\nu   Ξ \\Xi ξ \\xi   O O ο \\omicron   Π \\Pi π \\pi   P P ρ \\rho   Σ \\Sigma σ \\sigma   T T τ \\tau   Υ \\Upsilon υ \\upsilon   Φ \\Phi ϕ \\phi   X X χ \\chi   Ψ \\Psi ψ \\psi   Ω \\v ω \\omega    这篇文章是我转自别人的，放到我的库里面，方便以后即使查阅。\n作者：DanielGavin 来源：简书 链接：https://www.jianshu.com/p/e74eb43960a1\n","id":0,"section":"posts","summary":"行内与独行 行内公式：将公式插入到本行内，符号：$公式内容$，如：$xyz$ 独行公式：将公式插入到新的一行内，并且居中，符号：$$公式内容$$","tags":["Markown"],"title":"Mrakdown中插入数学公式","uri":"https://zhihao2020.github.io/2020/04/markdown%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/","year":"2020"},{"content":"定额计价法　 定额计价法的概念 定额计价是根据招标文件，按照各国家建设行政主管部门发布的建设工程预算定额的“工程量计算规则”，同时参照省级建设主管部门发布的人工工日单价、机械台班单价、材料以及设备价格信息及同期市场价格，直接计算直接工程费，再按规定的计算计算方法计算间接费、利润、税金，汇总确定建筑安装工程造价。\n定额计价法的特点 定额计价法是我们使用了几十年的一种计价模式，其基本特征就是价格=定额+费用+文件规定，并作为法定性的依据强制执行，不论是工程招标编制标底还是投标报价均以此为唯一的依据，承发包双方共用一本定额和费用标准确定标底价和投标报价，一旦定额价与市场价脱节就会影响计价的准确性。\n定额计价是建立在以政府定价为主导的计划经济管理基础上的价格管理模式，它所体现的是政府对工程价格的直接管理和调控。\n工程量清单计价 这种计价方式，是时代的趋势，是市场经济的要求。\n工程量清单计价概念 工程量清单计价是指 投标人完成由 招标人提供的 工程量清单所需的全部费用，包括分部分项工程费、措施项目费、其他项目费、规费和税金\n工程量清单计价方式，是在建设工程招投标中，招标人自行或委托具有资质的中介机构编制反映工程实体消耗和措施性消耗的工程量清单，并作为招标文件的一部分提供给投标人，由投标人依据工程量清单自主报价的计价方式。在工程招标中采用工程量清单计价是国际上较为通行的做法。\n工程量清单计价的特点 1、工程量清单均采用了综合单价形式，综合单价中包含了工程直接费、间接费、管理费、风险费、利润、国家规定的各种规费等，一目了然，更适合工程招投标。\n2、工程量清单报价要求投标单位根据市场行情，自身实力报价，这就要求投标人注重工程单价的分析，在报价中反映本投标单位的实际能力。\n3、工程量清单报价具有合同化的法定性，本质上是单价合同的计价模式，中标后的单价一经合同确认，在竣工结算时不能调整，即量变价不变。\n4、工程量报价有利于加强合同的管理，明确承发包双方的责任，实现风险的合理分担，工程量的误差由发包方承担，工程报价的风险由投标方承担。\n5、工程量清单报价将推动计价依据的改革发展，推动企业编制自己的企业定额，提高自己的工程技术水平和经营管理能力。\n6、工程量清单计价是国际通行的计价办法，在我国实行工程量清单计价，有利于提高国内建设各方主体参与国际化竞争的能力。\n工程量清单计价与传统的定额计价的区别 抽象意义上的不同 1、工程量清单计价与定额计价不仅仅是在表现形式、计价方法上发生了变化，而是从定额管理方式和计价模式上发生了变化。首先，从思想观念上对定额管理工作有了新的认识和定位。 由于工程量清单计价提供的是计价规则、计价办法以及定额消耗量，摆脱了定额标准价格的概念，真正实现了量价分离、企业自主报价、市场有序竞争形式价格。工程量清单报价按相同的工程量和统一的计量规则，由企业根据自身情况报出综合单价，价格高低完全由企业自己确定，充分体现了企业的实力，同时也真正体现出公开、公平、公正。　采用行业统一定额计价，投标企业没有定价的发言权，只能被动接受。而工程量清单投标报价，可以充分发挥企业的能动性，企业利用自身的特点，使企业在投标中处于优势的位置。同时工程量清单报价体现了企业技术管理水平等综合实力，也促进企业在施工中加强管理、鼓励创新、从技术中要效率、从管理中要利润，在激烈的市场竞争中不断发展和壮大，企业的经营管理水平高，可以降低管理费，自有的机械设备齐全，可减少报价中的机械租赁费用，对未来要素价格发展趋势预测准确，就可以减少承包风险，增强竞争力，其结果促进了优质企业做大做强，使无资金、无技术，无管理的小企业、包工头退出市场，实现了优胜劣汰，从而形成管理规范、竞争有序的建设市场秩序。\n2、工程量清单计价是属于全面成本管理的范畴，其思路是“统一计算规则，有效控制水量，彻底放开价格，正确引导企业自主报价、市场有序竞争形成价格”。跳出传统的定额计价模式，建立一种全新的计价模式，依靠市场和企业的实力通过竞争形成价格，使业主通过企业报价可直观的了解项目造价。 具体表现的不同 1、编制对象与综合内容不同 工程量清单项目的工程内容是 以最终产品为对象，按实际完成一个综合实体项目所需工程内容列项。其工程量计算规则 是根据主体工程项目设置的，综合了清单项目的全部工程内容。\n基础定额项目主要 是以施工过程为对象划分的，工程量计算规则仅是单一的工程内容。\n2、计算口径不同 工程量清单项目工程量计算规则是 按工程实体尺寸的净量计算，不考虑施工方法和加工余量。\n基础定额则考虑了不同施工方法和加工余量的施工过程的实际数量。\n例如：土石方工程中的“挖基坑土方”，\n 按计算规范规定，工程量清单项目计算是按图示尺寸数量计算的净量（基础垫层底面积×挖土深度），不包括放坡及工作面等的开挖量。 基础定额项目计算则按实际开挖量计算，包括放坡及工作面等的开挖量，即包含了为满足施工工艺要求而增加的加工余量。  在工程量清单项目计算规范中，挖基坑土方的工程内容综合了排地表水、土方开挖、围护（挡土板）及支拆、基坑钎探、运输等内容。而在基础定额中则将上述的工程内容都作为单独的定额子目处理。\n3、计量单位不同 工程量清单项目的计量单位一般采用基本的物理计量单位或自然单位，如m^2,m^3基础定额中的计量单位 还包括扩大的物理计量单位，如100m^2，1000m^3,100m等。\n那么它们都什么时候用呢？  看合同约定，一般招投标都是清单计价 政府项目必须用清单计价，地产公司项目或私人项目可以采用 定额招标方式。  ","id":1,"section":"posts","summary":"定额计价法 定额计价法的概念 定额计价是根据招标文件，按照各国家建设行政主管部门发布的建设工程预算定额的“工程量计算规则”，同时参照省级建设主管","tags":["工程造价"],"title":"定额计价与清单计价","uri":"https://zhihao2020.github.io/2020/04/%E5%AE%9A%E9%A2%9D%E8%AE%A1%E4%BB%B7%E4%B8%8E%E6%B8%85%E5%8D%95%E8%AE%A1%E4%BB%B7/","year":"2020"},{"content":"对于爬虫来说，知道了网站的数据自增ID，那么就能将整个站点爬取下来。不过，那些大站，比如油管之类的，他们绝不会把业务的自增ID暴露出来，而是用一种可逆的字符串替代。\n一般有这么几种方法:\n 使用Hashids，Hashids是一个小型的开放源代码库，可从数字生成短的，唯一的，非顺序的ID。 Base64编码，这个方法最直接，大多数语言也具有这个功能。不过没有Hashids的花哨功能。 根据timestamp生成ID，使用计数器（如果有的话）+时间戳+一些系统值+一个随机整数。许多公司都采用这种方法，因为它在分布式系统中效果很好。这些id是彼此独立生成的，发生碰撞的风险非常小，可以忽略不计。 如果ID仅包含数字，可以使用Optimus，它基于Knuth的整数哈希方法，并产生混淆的整数ID。只有PHP和Go实现。 Nano ID，一个很小的，安全的，URL友好的，唯一的JavaScript字符串ID生成器。它也可用于多种语言。 其他的方法  使用hashids 安装\npip install hashids\r 使用\n首先初始化一个hashids示例\nfrom hashids import Hashids\r 编码（加密）\nid = hashids.encode(2)\r 生成的字符ID长度和数值大小有关。\n解码（解密）\nnum = hashids.decode('j0gW')\r 解码后返回时一个元组。如果你解码一个随机的字符串ID，不一定能恢复成数字，此时会返回空元组。\n不过，因为hashids可逆，所以拿到ID后可以反向推测出原始数字ID。我们在编码的时候可以指定盐值。理论上，盐值不泄露，就很难破解。\n指定盐值\nhashids = Hashids(salt=\u0026quot;aaa\u0026quot;)\rhashids.encode(123)\r 同样的数字使用不同的盐值编码得到的字符串是不同的，别人就无法猜出原始ID是多少了。\n限制hash长度\n默认情况下，数字越小，编码生成的字符串也比较断，为了讲不通大小的数值转化为统一长度的字符串，在初始化hashids时，可以指定hash的最小长度。\nhashids = Hashids(salt=\u0026quot;aaa\u0026quot;,min_length=10)\rhashids.encode(123)\r 限制hash的字符种类\n如果你不希望hash中有大写字母，那么可以在初始化的时候，指定hash字符串的范围，例如我们可以指定为所有的小写字母\nhashids = Hashids(alphabet=\u0026quot;abcdefghigklmopkrst\u0026quot;)\rhashids.encode(123)\r 需要注意的时候，alphabet至少要指定16个以上的不同字符。\nBase64 Base64是一种基于64个可打印字符来表示二进制数据的表示方法。由于\n$$ \\log_264=6 $$ 所以每6个比特为一个单元，可以对应某个打印字符。\n其它的方法之后会再写 ","id":2,"section":"posts","summary":"对于爬虫来说，知道了网站的数据自增ID，那么就能将整个站点爬取下来。不过，那些大站，比如油管之类的，他们绝不会把业务的自增ID暴露出来，而是","tags":["爬虫","反爬"],"title":"得到真正的业务ID","uri":"https://zhihao2020.github.io/2020/04/%E5%8F%8D%E6%89%92id%E4%B9%8Bhashids/","year":"2020"},{"content":"Git介绍 Git其实就是一个版本控制系统。它记录着文件内容的变化，你可以查阅每次修改的情况。\n其实很多人就一直在使用版本控制系统，许多人习惯把整个项目文件放到一个特定的文件夹中，并注明备份的时间以示区分。这是一个不错的整理自己文件的习惯，不过它虽然简单，但如果有时候一不小心混淆了所在的工作目录，或者写错文件，或者意外的覆盖了文件，那么就很难再将它们找回来了。\n其实除了Git，人们很早也开发了许多本地版本控制系统，早期的系统大多就是采用某种简单的数据库来记录文件历次更新的差异。但它们都是基于本地的系统。\n再后来，人们慢慢想到要让不同的开发者协同工作，这时候，就有了新的系统。它们都有单一的集中管理的服务器，服务器里保存着所有文件的修订版本。\n嗯，这样有了很大的进步。不过，把所有的鸡蛋都放在同一个菜篮子里，总是有那么些不安全。这样一来，分布式版本控制系统（DVCS)诞生了。在这个系统里，客户端是把代码仓库完整的拷贝下来，而不是像以前那样，仅仅就是最新文件的快照。这样即使服务器宕机，那么每一个拷贝下来的仓库，都能及时进行部署。\nGit就是有这个神奇功能的软件。\nGit特点 Git的三种状态 Git中的文件有三种状态。已提交（committed）、已修改（modified）和已暂存（staged）\n 已提交：表示数据已经安全保存在本地数据库中。 已修改：表示修改文件，但还没有保存都数据库中。 已暂存：表示对一个已修改文件的当前版本做了标记，是指包含了在下一次提交的快照中。  这三种状态，对应了三个工作区的概念：Git仓库、工作目录和暂存区域\nGit仓库目录，是Git用来保存项目数据和对象数据库的地方。这是Git最重要的部分。其实从其他计算机克隆仓库时，拷贝的就是这里的数据。\n工作目录 就是对项目的某个版本独立提取出来的内容。\n暂存文件 是一个文件，保存了下一次将提交的文件列表信息，一般在Git仓库目录中。有时候也被称为“索引”\nGt直接记录快照，而非差异比较 每次你提交更新，或在Git中保存项目状态时，他主要对当时的文件制作一个快照并保存这个快照的索引。Git对待数据更像是一个快照流。\nGit中几乎所有操作都是本地执行 在Git中绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其他计算机的信息。这意味着，你在飞机或者火车上没有网络的情况下，想做些工作，你能愉快地提交，并且直到有网络连接时再上传。\nGit保证完整性 Git中的所有数据在存储前都计算校验和，然后以校验和来引用。这样，就能确保每次传输过程中，都能保证完整；如果不完整的话，Git就会及时发现。\nGit一般只添加数据 你在执行Git操作的时候，几乎只往Git数据库中增加数据，那么就很难执行不可逆的操作。当然你得需要每次都要进行提交。\n你了解了这个，我们使用Git就会很安心了。我们知道我们尝试了多种操作，而没有把事情搞糟的危险。\n当然，你也可以去参加开源社区做出贡献了！ 下一篇，我就会写关于Git的操作了。\n","id":3,"section":"posts","summary":"Git介绍 Git其实就是一个版本控制系统。它记录着文件内容的变化，你可以查阅每次修改的情况。 其实很多人就一直在使用版本控制系统，许多人习惯把","tags":["Git"],"title":"为什么要使用Git","uri":"https://zhihao2020.github.io/2020/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8git/","year":"2020"},{"content":"更新文章 hugo --theme= --baseUrl=\u0026quot;\u0026quot; --buildDrafts\rgit remote add origin https://github.com/XXX/XXX.github.io.git\rcd public\rgit add .\rgit commit -m \u0026quot;XXXX/XX/XX\u0026quot;\rgit push -u origin master\r ","id":4,"section":"posts","summary":"更新文章 hugo --theme= --baseUrl=\u0026quot;\u0026quot; --buildDrafts git remote add origin https://github.com/XXX/XXX.github.io.git cd public git add . git commit -m \u0026quot;XXXX/XX/XX\u0026quot; git push -u origin master","tags":["Hugo","Git"],"title":"Hugo的操作","uri":"https://zhihao2020.github.io/2020/04/%E6%9B%B4%E6%96%B0hugo/","year":"2020"},{"content":"简单介绍一下 汉语拼音，分为声母与韵母。全拼打字的时候，是将它们都打出来，比如[双]字 就需要打出shuang，相比双拼效率就低了。\n双拼，是将声母与韵母分开，除了zh、ch、sh之外，所有的声母都是键盘上的标准键。而把韵母分配的键盘26个按键上，这么一来每一个字字需要按两个键（一个声母和一个韵母）就可以完成输入了。\n我使用的就是[小鹤双拼]\n它为了让大家记住键位，还编了首曲子哈哈哈\n我的使用心得 使用了双拼之后，将自己所有电子设备的输入法都改为了双拼，现在，你在让我使用全拼到也很不适应了。\n从使用曲子辅助记忆到已经形成肌肉记忆，我大概花了一周的时间。之后就能熟练的使用双拼，学习新东西的那个过程是曲折的，但是一旦挺过来，那么就是光明的了。\n","id":5,"section":"posts","summary":"简单介绍一下 汉语拼音，分为声母与韵母。全拼打字的时候，是将它们都打出来，比如[双]字 就需要打出shuang，相比双拼效率就低了。 双拼，是将声","tags":["双拼"],"title":"从全拼到双拼","uri":"https://zhihao2020.github.io/2020/04/%E4%BB%8E%E5%85%A8%E6%8B%BC%E5%88%B0%E5%8F%8C%E6%8B%BC/","year":"2020"},{"content":"def teach_yourself(anything):\rwhile not creat(something):\rlearn()\rpractice()\rreturn teach_yourself(another)\rteach_yourself(something)\r 我挺赞同这个伪代码的，自学的过程就是不断学习、不断创造的过程，并将能否进行创造作为自学成功与否的关键。\n自学是时代的要求 在大学中，自学是必备的技能。学生时期是时间最为最为充分的时期，在这个时期吸足了养分，才能在接下来的漫长岁月中，更加茁壮。\n现在，是一个信息爆炸的时代，但是知识是不会爆炸的。那些之所以称为泡沫的东西，都是缺少了价值作为基础，反之，那些真正有价值的东西，是不会爆炸的，他会随着时间不断积累，不断增值。比如，现在的人工智能，它的理论在上个世纪就已经很完善了，只是当前机器的算力越来越强，才让那些理论真正的实现。\n求人不如求己，人与人之间的交往本质上就是交换，通过不断的自学，能实现自身价值的增值。在说后的社交中，也会处于更有利的地位。\n自学也是个人的一种乐趣 你不断的学习东西，通过他们进行创造，你将不断收获惊喜。并且，也会享受到之间你掌握那些手艺带来的方便、愉快。\n 用既有政策下的结果反对改革——陆铭\n 我也想通过不句话来说明，不要以为这些知识到来不了什么，只是你从未拥有，所以你才从未感受到，于是，你甚至信以为真，真的不去再学习。\n当这成为你的一种习惯，内化的你的骨子里。那么，不学习、不进步才会让你更加难受。这时你也真正的进化了。\n","id":6,"section":"posts","summary":"def teach_yourself(anything): while not creat(something): learn() practice() return teach_yourself(another) teach_yourself(something) 我挺赞同这个伪代码的，自学的过程就是不断学习、不断创造的过程，并将能否进行创造作为自学成功与否的关键。 自学是时代的要求 在","tags":["自学","自我提升"],"title":"关于自学的感想（1）","uri":"https://zhihao2020.github.io/2020/04/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%AD%A6%E7%9A%84%E6%84%9F%E6%83%B31/","year":"2020"},{"content":" 人生而就是不平等的，但是在时间上却是平等的\n 珍惜自己的时间，远离焦虑 这个世界上又这么一个银行，他每天给你1440的资产，让你去消费，而且过了今天就一切清零，再给你1440.资产不会积累，只能不断消耗，但是每天的供应都是一样多。它其实就叫做时间银行。\n与其因焦虑而不断浪费自己的时间，不如去好好的利用它们、好好的享受它们。那些使用这些资产去学习、提升自己的人，其实本质上是相信自己以后的时间会更值钱。\n人就是很奇怪，对有形的东西感知能力还在线，对于那一些不容易感知的就会失去感觉，不信的话，想想你自己在家的这段时间，还能记得今天是周几吗？\n","id":7,"section":"posts","summary":"人生而就是不平等的，但是在时间上却是平等的 珍惜自己的时间，远离焦虑 这个世界上又这么一个银行，他每天给你1440的资产，让你去消费，而且过了今","tags":["爱自己"],"title":"爱惜自己的时间","uri":"https://zhihao2020.github.io/2020/04/%E7%88%B1%E6%83%9C%E8%87%AA%E5%B7%B1%E7%9A%84%E6%97%B6%E9%97%B4/","year":"2020"}],"tags":[{"title":"Git","uri":"https://zhihao2020.github.io/tags/git/"},{"title":"Hugo","uri":"https://zhihao2020.github.io/tags/hugo/"},{"title":"Markown","uri":"https://zhihao2020.github.io/tags/markown/"},{"title":"双拼","uri":"https://zhihao2020.github.io/tags/%E5%8F%8C%E6%8B%BC/"},{"title":"反爬","uri":"https://zhihao2020.github.io/tags/%E5%8F%8D%E7%88%AC/"},{"title":"工程造价","uri":"https://zhihao2020.github.io/tags/%E5%B7%A5%E7%A8%8B%E9%80%A0%E4%BB%B7/"},{"title":"爬虫","uri":"https://zhihao2020.github.io/tags/%E7%88%AC%E8%99%AB/"},{"title":"爱自己","uri":"https://zhihao2020.github.io/tags/%E7%88%B1%E8%87%AA%E5%B7%B1/"},{"title":"自学","uri":"https://zhihao2020.github.io/tags/%E8%87%AA%E5%AD%A6/"},{"title":"自我提升","uri":"https://zhihao2020.github.io/tags/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/"}]}