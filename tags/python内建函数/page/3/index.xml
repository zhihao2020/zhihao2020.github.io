<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python内建函数 on Zhihao&#39;s Blog</title>
    <link>https://xuzhihao.top/tags/python%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/</link>
    <description>Recent content in Python内建函数 on Zhihao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 02 May 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://xuzhihao.top/tags/python%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python的webbrowser</title>
      <link>https://xuzhihao.top/2020/05/python%E7%9A%84webbrowser/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/05/python%E7%9A%84webbrowser/</guid>
      <description>允许向用户显示基于Web的文档。在大多数情况下，只需要调用open()函数就可以。 脚本 webbrowser 可以用作模块的命令行界面。它接受一个 URL 作为参数。还接</description>
    </item>
    
    <item>
      <title>SQLite常用操作</title>
      <link>https://xuzhihao.top/2020/05/sqlite%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/05/sqlite%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>新建一个数据库文件 使用cd命令进入到数据库文件的目录下，用sqlite3命令创建数据库文件。 sqlite3 DatabaseName.db 查看已建立的数据库文件 使用database命</description>
    </item>
    
    <item>
      <title>GCCP5.0使用流程</title>
      <link>https://xuzhihao.top/2020/04/gccp5.0%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/gccp5.0%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B/</guid>
      <description>新建工程 建立分部分项（编制清单、描述项目特征、套定额） 建立单价措施项目（编制清单、描述项目特套定额等） 建立总价措施项目（取费） 建立其他项目费</description>
    </item>
    
    <item>
      <title>html转为图片</title>
      <link>https://xuzhihao.top/2020/04/html%E8%BD%AC%E4%B8%BA%E5%9B%BE%E7%89%87/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/html%E8%BD%AC%E4%B8%BA%E5%9B%BE%E7%89%87/</guid>
      <description>安装python-pdfkit： pip install pdfkit 安装wkhtmlopdf https://wkhtmltopdf.org/downloads.html下</description>
    </item>
    
    <item>
      <title>Python中的logging模块</title>
      <link>https://xuzhihao.top/2020/04/python%E4%B8%AD%E7%9A%84logging%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/python%E4%B8%AD%E7%9A%84logging%E6%A8%A1%E5%9D%97/</guid>
      <description>使用日志模块要启用logging模块， 开始 在程序运行时将日志信息显示在屏幕上，请将下面的代码复制到程序顶部（但在Python的#!行之下） import</description>
    </item>
    
    <item>
      <title>ShellExecute简单控制打印机</title>
      <link>https://xuzhihao.top/2020/04/shellexecute%E7%AE%80%E5%8D%95%E6%8E%A7%E5%88%B6%E6%89%93%E5%8D%B0%E6%9C%BA/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/shellexecute%E7%AE%80%E5%8D%95%E6%8E%A7%E5%88%B6%E6%89%93%E5%8D%B0%E6%9C%BA/</guid>
      <description>使用ShellExecute方法，可以打印Microsoft Office文档，PDF文件，文本文件以及几乎搜友主要应用程序。 import tempfile import win32api import win32print filename =</description>
    </item>
    
    <item>
      <title>Window下安装SQLite</title>
      <link>https://xuzhihao.top/2020/04/%E5%AE%89%E8%A3%85sqlite/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/%E5%AE%89%E8%A3%85sqlite/</guid>
      <description>SQLite官方安装地址：http://www.sqlite.org/download.html 我下载了压缩包sqlite-tools-wi</description>
    </item>
    
    <item>
      <title>用Matplotlib画折线图</title>
      <link>https://xuzhihao.top/2020/04/%E7%94%A8matplotlib%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/%E7%94%A8matplotlib%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE/</guid>
      <description>plt.plot()函数参数详解 plt.plot(x,y,linestyle, linewidth,color,marker, markersize,markeredgecolor, markerfactcolor,label,alpha) x：指定折现图的x轴数据 y：指定折线图的y轴数据 linestyle：指定折线类型，可以是实线、虚线、</description>
    </item>
    
    <item>
      <title>pip使用指南</title>
      <link>https://xuzhihao.top/2020/04/pip%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/pip%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>安装时，换个源 pip install -i http://pypi.tuna.tsinghua.edu.cn/simple XXX https://pypi.douban.com/simple 豆瓣的源 显示版本和路径 pip --version 升级pip pip install -U pip 安装包 pip install SomePackage #这是下载最新版本 pip install SomePackage==1.0.4 #指定版本 pip install SomePackafe&amp;gt;=1.0.4 #最小版本 升级包 pip</description>
    </item>
    
    <item>
      <title>Windows下CMD常用命令</title>
      <link>https://xuzhihao.top/2020/04/windows%E4%B8%8Bcmd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/windows%E4%B8%8Bcmd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>1、进入某个盘 D: #进入D盘 2、查看目录文件 dir 3、创建目录和删除目录 md 目录名 //创建目录 rd 目录名 //删除目录 4、查看本机ip ipconfig 5、清楚屏幕 cls 6</description>
    </item>
    
    <item>
      <title>【Tensorflow安装问题】总是无法安装tensorflow：Could not find a version that satisfies the requirement tensorflow</title>
      <link>https://xuzhihao.top/2020/04/tensorflow%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%80%BB%E6%98%AF%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85tensorflowcould-not-find-a-version-that-satisfies-the-requirement-tensorflow/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/tensorflow%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%80%BB%E6%98%AF%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85tensorflowcould-not-find-a-version-that-satisfies-the-requirement-tensorflow/</guid>
      <description>我在使用pip 安装Tendorflow时，出现了错误。 我查阅了好多博客，发现他们大多都是一个版本的&amp;hellip;.. Tensorflow能</description>
    </item>
    
    <item>
      <title>操作CSV表格</title>
      <link>https://xuzhihao.top/2020/04/%E4%BD%BF%E7%94%A8csv%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/%E4%BD%BF%E7%94%A8csv%E6%A8%A1%E5%9D%97/</guid>
      <description>CSV表示&amp;quot;Comma-Sparated Values（逗号分隔的值）&amp;quot;,CSV文件是简化的电子表格，保存为纯文本文件。 不</description>
    </item>
    
    <item>
      <title>Git基本操作(2)</title>
      <link>https://xuzhihao.top/2020/04/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C2/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C2/</guid>
      <description>打标签 打标签就是用于给历史中的某一个提交打上标签。 列出标签 在Git中列出已有的标签是非常直观的。只需要输入git tag。 当然，你可以使用特定</description>
    </item>
    
    <item>
      <title>Git错误non-fast-forward后的解决方案</title>
      <link>https://xuzhihao.top/2020/04/git%E9%94%99%E8%AF%AFnon-fast-forward%E5%90%8E%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/git%E9%94%99%E8%AF%AFnon-fast-forward%E5%90%8E%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>在Push文件到github时候，出现了这个问题。这个问题是本地和Github中Repository中的文件出现冲突所造成的。在提交之前你需</description>
    </item>
    
    <item>
      <title>创建你的第一个GUI</title>
      <link>https://xuzhihao.top/2020/04/%E5%88%9B%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAgui/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/%E5%88%9B%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAgui/</guid>
      <description>from PyQt5 import QtWidgets import sys if __name__ == &amp;quot;__main__&amp;quot;: app = QtWidgets.QApplication(sys.argv) w = QtWidgets.QWidgst() w.resize(600,600) w.move(600,600) w.setWindowTitle(&amp;quot;第一个Qt程序&amp;quot;) w.show() sys.exit(app.exec_()) 其中， app = QtWidgets.QApplication(sys.argv) 每一个PyQt</description>
    </item>
    
    <item>
      <title>Git分支(1)</title>
      <link>https://xuzhihao.top/2020/04/git%E5%88%86%E6%94%AF1/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/git%E5%88%86%E6%94%AF1/</guid>
      <description>使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。 分支简介 在进行提交操作时，Git会保存一个提交对象（commit obj</description>
    </item>
    
    <item>
      <title>Python中的shelve</title>
      <link>https://xuzhihao.top/2020/04/python%E4%B8%AD%E7%9A%84shelve/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/python%E4%B8%AD%E7%9A%84shelve/</guid>
      <description>shelve可以当做是简单的存储。 使用方法如下： import shelve d = shelve.open(filename) # open -- file may get suffix added by low-level # library d[key] = data # store data at key (overwrites old data if # using an existing key) data = d[key] # retrieve a COPY of data at key (raise</description>
    </item>
    
    <item>
      <title>打包Python程序</title>
      <link>https://xuzhihao.top/2020/04/%E6%89%93%E5%8C%85python%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/%E6%89%93%E5%8C%85python%E7%A8%8B%E5%BA%8F/</guid>
      <description>PyInstaller原理 PyInstaller其实就是把Python解释器和脚本打包成一个可执行文件，和编译成真正的机器码完全是两回事。所</description>
    </item>
    
    <item>
      <title>让Google和百度搜索到你的Hugo博客</title>
      <link>https://xuzhihao.top/2020/04/%E8%AE%A9google%E5%92%8C%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%88%B0%E4%BD%A0%E7%9A%84hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/%E8%AE%A9google%E5%92%8C%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%88%B0%E4%BD%A0%E7%9A%84hugo%E5%8D%9A%E5%AE%A2/</guid>
      <description>提交给Google网站站长 打开 Google网站站长，点击 “SEARCH CONSOLE ” 进入，然后添加资源。 会要求下载一个html文件如google571</description>
    </item>
    
    <item>
      <title>Python中的__call__方法</title>
      <link>https://xuzhihao.top/2020/04/python%E4%B8%AD%E7%9A%84__call__/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xuzhihao.top/2020/04/python%E4%B8%AD%E7%9A%84__call__/</guid>
      <description>调用 关于 __call__ 方法，不得不先提到一个概念，就是可调用对象（callable），我们平时自定义的函数、内置函数和类都属于可调用对象，但凡是可以把一</description>
    </item>
    
  </channel>
</rss>
